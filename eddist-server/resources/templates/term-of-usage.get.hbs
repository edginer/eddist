<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>利用規約</title>
    <script src="https://cdn.jsdelivr.net/npm/@tailwindcss/browser@4"></script>
</head>
<body class="bg-gray-50">
    <div class="min-h-screen py-8">
        <div class="max-w-4xl mx-auto p-6">
            <div class="bg-white rounded-lg shadow-sm border p-8">
                <h1 class="text-3xl font-bold text-gray-900 mb-8 text-center">利用規約</h1>
                
                <div id="loading" class="text-center py-8">
                    <p class="text-gray-600">利用規約を読み込み中...</p>
                </div>
                
                <div id="content" class="hidden space-y-6"></div>
                
                <div id="error" class="hidden text-center py-8">
                    <p class="text-red-600">利用規約の読み込みに失敗しました。ページを再読み込みしてください。</p>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            const loadingEl = document.getElementById('loading');
            const contentEl = document.getElementById('content');
            const errorEl = document.getElementById('error');

            try {
                const response = await fetch('/api/terms');
                if (!response.ok) {
                    throw new Error('Failed to fetch terms');
                }
                
                const data = await response.json();
                
                // Hide loading, show content
                loadingEl.classList.add('hidden');
                contentEl.classList.remove('hidden');
                
                // Render sections
                data.sections.forEach(section => {
                    const sectionEl = document.createElement('div');
                    sectionEl.className = 'mb-6';
                    
                    // Section title
                    const titleEl = document.createElement('h2');
                    titleEl.className = 'text-xl font-semibold text-gray-900 mb-3';
                    titleEl.textContent = section.title;
                    sectionEl.appendChild(titleEl);
                    
                    // Section content
                    if (section.content) {
                        const contentP = document.createElement('p');
                        contentP.className = 'text-gray-700 leading-relaxed mb-3';
                        contentP.textContent = section.content;
                        sectionEl.appendChild(contentP);
                    }
                    
                    // Lists
                    if (section.list) {
                        const ol = document.createElement('ol');
                        ol.className = 'list-decimal list-inside text-gray-700 mb-3 space-y-1';
                        section.list.forEach(item => {
                            const li = document.createElement('li');
                            li.textContent = item;
                            ol.appendChild(li);
                        });
                        sectionEl.appendChild(ol);
                    }
                    
                    // Additional content
                    if (section.additional) {
                        const additionalP = document.createElement('p');
                        additionalP.className = 'text-gray-700 leading-relaxed mb-3';
                        additionalP.textContent = section.additional;
                        sectionEl.appendChild(additionalP);
                    }
                    
                    // Additional lists
                    if (section.additional_list) {
                        const ol = document.createElement('ol');
                        ol.className = 'list-decimal list-inside text-gray-700 mb-3';
                        section.additional_list.forEach(item => {
                            const li = document.createElement('li');
                            li.textContent = item;
                            ol.appendChild(li);
                        });
                        sectionEl.appendChild(ol);
                    }
                    
                    // Subsections (for 第4条)
                    if (section.sections) {
                        const mainOl = document.createElement('ol');
                        mainOl.className = 'list-decimal list-inside text-gray-700 space-y-3';
                        
                        section.sections.forEach(subsection => {
                            const li = document.createElement('li');
                            li.className = 'space-y-2';
                            
                            const subtitle = document.createElement('strong');
                            subtitle.textContent = subsection.subtitle;
                            li.appendChild(subtitle);
                            
                            const ul = document.createElement('ul');
                            ul.className = 'list-disc list-inside ml-6 mt-2 space-y-1';
                            subsection.items.forEach(item => {
                                const subLi = document.createElement('li');
                                subLi.textContent = item;
                                ul.appendChild(subLi);
                            });
                            li.appendChild(ul);
                            mainOl.appendChild(li);
                        });
                        sectionEl.appendChild(mainOl);
                    }
                    
                    contentEl.appendChild(sectionEl);
                });
                
                // Add separator
                const hr = document.createElement('hr');
                hr.className = 'my-8';
                contentEl.appendChild(hr);
                
                // Footnotes
                if (data.footnotes) {
                    const footnotesOl = document.createElement('ol');
                    footnotesOl.className = 'list-decimal list-inside text-sm text-gray-600 space-y-2 mb-6';
                    data.footnotes.forEach(footnote => {
                        const li = document.createElement('li');
                        li.textContent = footnote;
                        footnotesOl.appendChild(li);
                    });
                    contentEl.appendChild(footnotesOl);
                }
                
                // Another separator
                const hr2 = document.createElement('hr');
                hr2.className = 'my-6';
                contentEl.appendChild(hr2);
                
                // Contact
                if (data.contact) {
                    const contactP = document.createElement('p');
                    contactP.className = 'text-sm text-gray-600 text-center';
                    contactP.textContent = `問い合わせ先: ${data.contact}`;
                    contentEl.appendChild(contactP);
                }
                
            } catch (error) {
                console.error('Error loading terms:', error);
                loadingEl.classList.add('hidden');
                errorEl.classList.remove('hidden');
            }
        });
    </script>
</body>