name: Image retention policy

on:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *" # every hour

jobs:
  clean:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    name: Delete old test images
    steps:
      - name: Delete old images (eddist)
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "eddist"
          image-tags: "!v*"
          cut-off: 1d
          keep-n-most-recent: 3
      - name: Delete old images (eddist-client)
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "eddist-client"
          image-tags: "!v*"
          cut-off: 1d
          keep-n-most-recent: 3
      - name: Delete old images (eddist-admin)
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "eddist-admin"
          image-tags: "!v*"
          cut-off: 1d
          keep-n-most-recent: 3
      - name: Delete old images (eddist-cron)
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "eddist-cron"
          image-tags: "!v*"
          cut-off: 1d
          keep-n-most-recent: 3
      - name: Delete old images (eddist-persistence)
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: user
          token: ${{ secrets.GITHUB_TOKEN }}
          image-names: "eddist-persistence"
          image-tags: "!v*"
          cut-off: 1d
          keep-n-most-recent: 3
