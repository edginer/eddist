{
  "openapi": "3.0.3",
  "info": {
    "title": "eddist-admin",
    "description": "",
    "license": {
      "name": ""
    },
    "version": "0.1.0"
  },
  "paths": {
    "/authed_tokens/{authed_token_id}/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_authed_token",
        "parameters": [
          {
            "name": "authed_token_id",
            "in": "path",
            "description": "Authed token ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get authed token successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthedToken"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bbs"
        ],
        "operationId": "delete_authed_token",
        "parameters": [
          {
            "name": "authed_token_id",
            "in": "path",
            "description": "Authed token ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "using_origin_ip",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete authed token successfully"
          }
        }
      }
    },
    "/boards/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_boards",
        "responses": {
          "200": {
            "description": "List boards successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Board"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bbs"
        ],
        "operationId": "create_board",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoardInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create board successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBoardInput"
                }
              }
            }
          }
        }
      }
    },
    "/boards/{board_key}/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_board",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get board successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          },
          "404": {
            "description": "Board not found"
          }
        }
      },
      "patch": {
        "tags": [
          "bbs"
        ],
        "operationId": "edit_board",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditBoardInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Edit board successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Board"
                }
              }
            }
          }
        }
      }
    },
    "/boards/{board_key}/admin-dat-archives/{thread_number}/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_admin_dat_archived_thread",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_number",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get archived thread successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchivedAdminThread"
                }
              }
            }
          }
        }
      }
    },
    "/boards/{board_key}/archives/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_archived_threads",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List threads successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Thread"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/boards/{board_key}/archives/{thread_id}/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_archived_thread",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_id",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get thread successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thread"
                }
              }
            }
          },
          "404": {
            "description": "Thread not found"
          }
        }
      }
    },
    "/boards/{board_key}/archives/{thread_id}/responses/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_archived_responses",
        "parameters": [
          {
            "name": "thread_id",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "board_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List responses successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Res"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Thread not found"
          }
        }
      }
    },
    "/boards/{board_key}/dat-archives/{thread_number}/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_dat_archived_thread",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_number",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get archived thread successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArchivedThread"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bbs"
        ],
        "operationId": "delete_archived_thread",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_number",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete thread successfully"
          }
        }
      }
    },
    "/boards/{board_key}/dat-archives/{thread_number}/responses/": {
      "patch": {
        "tags": [
          "bbs"
        ],
        "operationId": "update_archived_res",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_number",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ArchivedResUpdate"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update archived response successfully",
            "content": {
              "application/json": {
                "schema": {
                  "default": null,
                  "nullable": true
                }
              }
            }
          }
        }
      }
    },
    "/boards/{board_key}/dat-archives/{thread_number}/responses/{res_order}/": {
      "delete": {
        "tags": [
          "bbs"
        ],
        "operationId": "delete_archived_res",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_number",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "res_order",
            "in": "path",
            "description": "Response order",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete response successfully"
          }
        }
      }
    },
    "/boards/{board_key}/info/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_board_info",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get board info successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoardInfo"
                }
              }
            }
          },
          "404": {
            "description": "Board not found"
          }
        }
      }
    },
    "/boards/{board_key}/threads-compaction/": {
      "post": {
        "tags": [
          "bbs"
        ],
        "operationId": "threads_compaction",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board Key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThreadCompactionInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Compaction thread successfully"
          }
        }
      }
    },
    "/boards/{board_key}/threads/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_threads",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List threads successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Thread"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/boards/{board_key}/threads/{thread_id}/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_thread",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_id",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get thread successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thread"
                }
              }
            }
          },
          "404": {
            "description": "Thread not found"
          }
        }
      }
    },
    "/boards/{board_key}/threads/{thread_id}/responses/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_responses",
        "parameters": [
          {
            "name": "thread_id",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "board_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List responses successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Res"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Thread not found"
          }
        }
      }
    },
    "/boards/{board_key}/threads/{thread_id}/responses/{res_id}/": {
      "patch": {
        "tags": [
          "bbs"
        ],
        "operationId": "update_response",
        "parameters": [
          {
            "name": "board_key",
            "in": "path",
            "description": "Board ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "thread_id",
            "in": "path",
            "description": "Thread ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "minimum": 0
            }
          },
          {
            "name": "res_id",
            "in": "path",
            "description": "Response ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateResInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update response successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Res"
                }
              }
            }
          }
        }
      }
    },
    "/caps/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_caps",
        "responses": {
          "200": {
            "description": "List cap words successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Cap"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bbs"
        ],
        "operationId": "create_cap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreationCapInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create cap successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cap"
                }
              }
            }
          }
        }
      }
    },
    "/caps/{cap_id}/": {
      "delete": {
        "tags": [
          "bbs"
        ],
        "operationId": "delete_cap",
        "parameters": [
          {
            "name": "cap_id",
            "in": "path",
            "description": "Cap ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete Cap successfully"
          }
        }
      },
      "patch": {
        "tags": [
          "bbs"
        ],
        "operationId": "update_cap",
        "parameters": [
          {
            "name": "cap_id",
            "in": "path",
            "description": "Cap ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCapInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update cap word successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cap"
                }
              }
            }
          }
        }
      }
    },
    "/ng_words/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "get_ng_words",
        "responses": {
          "200": {
            "description": "List ng words successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NgWord"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "bbs"
        ],
        "operationId": "create_ng_word",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreationNgWordInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Create ng word successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NgWord"
                }
              }
            }
          }
        }
      }
    },
    "/ng_words/{ng_word_id}/": {
      "delete": {
        "tags": [
          "bbs"
        ],
        "operationId": "delete_ng_word",
        "parameters": [
          {
            "name": "ng_word_id",
            "in": "path",
            "description": "NG word ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete ng word successfully"
          }
        }
      },
      "patch": {
        "tags": [
          "bbs"
        ],
        "operationId": "update_ng_word",
        "parameters": [
          {
            "name": "ng_word_id",
            "in": "path",
            "description": "NG word ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateNgWordInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update ng word successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NgWord"
                }
              }
            }
          }
        }
      }
    },
    "/users/search/": {
      "get": {
        "tags": [
          "bbs"
        ],
        "operationId": "search_users",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "user_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "authed_token_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List users successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ArchivedAdminRes": {
        "type": "object",
        "required": [
          "name",
          "mail",
          "date",
          "ip_addr",
          "authed_token_id",
          "body"
        ],
        "properties": {
          "authed_token_id": {
            "type": "string"
          },
          "author_id": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "ip_addr": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ArchivedAdminThread": {
        "type": "object",
        "required": [
          "title",
          "responses"
        ],
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArchivedAdminRes"
            }
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ArchivedRes": {
        "type": "object",
        "required": [
          "name",
          "mail",
          "date",
          "body",
          "is_abone",
          "order"
        ],
        "properties": {
          "author_id": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "is_abone": {
            "type": "boolean"
          },
          "mail": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "order": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "ArchivedResUpdate": {
        "type": "object",
        "required": [
          "res_order",
          "author_name",
          "email",
          "body"
        ],
        "properties": {
          "author_name": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "res_order": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      },
      "ArchivedThread": {
        "type": "object",
        "required": [
          "title",
          "responses"
        ],
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArchivedRes"
            }
          },
          "title": {
            "type": "string"
          }
        }
      },
      "AuthedToken": {
        "type": "object",
        "required": [
          "id",
          "token",
          "origin_ip",
          "reduced_origin_ip",
          "writing_ua",
          "created_at",
          "validity"
        ],
        "properties": {
          "authed_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "authed_ua": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "last_wrote_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "origin_ip": {
            "type": "string"
          },
          "reduced_origin_ip": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "validity": {
            "type": "boolean"
          },
          "writing_ua": {
            "type": "string"
          }
        }
      },
      "Board": {
        "type": "object",
        "required": [
          "id",
          "name",
          "board_key",
          "default_name",
          "thread_count"
        ],
        "properties": {
          "board_key": {
            "type": "string"
          },
          "default_name": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "thread_count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BoardInfo": {
        "type": "object",
        "required": [
          "local_rules",
          "base_thread_creation_span_sec",
          "base_response_creation_span_sec",
          "max_thread_name_byte_length",
          "max_author_name_byte_length",
          "max_email_byte_length",
          "max_response_body_byte_length",
          "max_response_body_lines",
          "read_only"
        ],
        "properties": {
          "base_response_creation_span_sec": {
            "type": "integer",
            "minimum": 0
          },
          "base_thread_creation_span_sec": {
            "type": "integer",
            "minimum": 0
          },
          "local_rules": {
            "type": "string"
          },
          "max_author_name_byte_length": {
            "type": "integer",
            "minimum": 0
          },
          "max_email_byte_length": {
            "type": "integer",
            "minimum": 0
          },
          "max_response_body_byte_length": {
            "type": "integer",
            "minimum": 0
          },
          "max_response_body_lines": {
            "type": "integer",
            "minimum": 0
          },
          "max_thread_name_byte_length": {
            "type": "integer",
            "minimum": 0
          },
          "read_only": {
            "type": "boolean"
          },
          "threads_archive_cron": {
            "type": "string",
            "nullable": true
          },
          "threads_archive_trigger_thread_count": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          }
        }
      },
      "Cap": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "created_at",
          "updated_at",
          "board_ids"
        ],
        "properties": {
          "board_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ClientInfo": {
        "type": "object",
        "required": [
          "user_agent",
          "asn_num",
          "ip_addr"
        ],
        "properties": {
          "asn_num": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "ip_addr": {
            "type": "string"
          },
          "tinker": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Tinker"
              }
            ],
            "nullable": true
          },
          "user_agent": {
            "type": "string"
          }
        }
      },
      "CreateBoardInput": {
        "type": "object",
        "required": [
          "name",
          "board_key",
          "default_name",
          "local_rule"
        ],
        "properties": {
          "base_response_creation_span_sec": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "base_thread_creation_span_sec": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "board_key": {
            "type": "string"
          },
          "default_name": {
            "type": "string"
          },
          "local_rule": {
            "type": "string"
          },
          "max_author_name_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_email_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_response_body_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_response_body_lines": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_thread_name_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "name": {
            "type": "string"
          },
          "threads_archive_cron": {
            "type": "string",
            "nullable": true
          },
          "threads_archive_trigger_thread_count": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          }
        }
      },
      "CreationCapInput": {
        "type": "object",
        "required": [
          "name",
          "description",
          "password"
        ],
        "properties": {
          "description": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "CreationNgWordInput": {
        "type": "object",
        "required": [
          "name",
          "word"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "word": {
            "type": "string"
          }
        }
      },
      "EditBoardInput": {
        "type": "object",
        "properties": {
          "base_response_creation_span_sec": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "base_thread_creation_span_sec": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "default_name": {
            "type": "string",
            "nullable": true
          },
          "local_rule": {
            "type": "string",
            "nullable": true
          },
          "max_author_name_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_email_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_response_body_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_response_body_lines": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "max_thread_name_byte_length": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "read_only": {
            "type": "boolean",
            "nullable": true
          },
          "threads_archive_cron": {
            "type": "string",
            "nullable": true
          },
          "threads_archive_trigger_thread_count": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          }
        }
      },
      "NgWord": {
        "type": "object",
        "required": [
          "id",
          "name",
          "word",
          "created_at",
          "updated_at",
          "board_ids"
        ],
        "properties": {
          "board_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "word": {
            "type": "string"
          }
        }
      },
      "Res": {
        "type": "object",
        "required": [
          "id",
          "body",
          "created_at",
          "author_id",
          "ip_addr",
          "authed_token_id",
          "board_id",
          "thread_id",
          "is_abone",
          "client_info",
          "res_order"
        ],
        "properties": {
          "authed_token_id": {
            "type": "string",
            "format": "uuid"
          },
          "author_id": {
            "type": "string"
          },
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "board_id": {
            "type": "string",
            "format": "uuid"
          },
          "body": {
            "type": "string"
          },
          "client_info": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "ip_addr": {
            "type": "string"
          },
          "is_abone": {
            "type": "boolean"
          },
          "mail": {
            "type": "string",
            "nullable": true
          },
          "res_order": {
            "type": "integer",
            "format": "int32"
          },
          "thread_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "Thread": {
        "type": "object",
        "required": [
          "id",
          "board_id",
          "thread_number",
          "last_modified",
          "sage_last_modified",
          "title",
          "authed_token_id",
          "metadent",
          "response_count",
          "no_pool",
          "archived",
          "active"
        ],
        "properties": {
          "active": {
            "type": "boolean"
          },
          "archived": {
            "type": "boolean"
          },
          "authed_token_id": {
            "type": "string",
            "format": "uuid"
          },
          "board_id": {
            "type": "string",
            "format": "uuid"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "last_modified": {
            "type": "string",
            "format": "date-time"
          },
          "metadent": {
            "type": "string"
          },
          "no_pool": {
            "type": "boolean"
          },
          "response_count": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "sage_last_modified": {
            "type": "string",
            "format": "date-time"
          },
          "thread_number": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "title": {
            "type": "string"
          }
        }
      },
      "ThreadCompactionInput": {
        "type": "object",
        "required": [
          "target_count"
        ],
        "properties": {
          "target_count": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "Tinker": {
        "type": "object",
        "required": [
          "authed_token",
          "wrote_count",
          "created_thread_count",
          "level",
          "last_level_up_at",
          "last_wrote_at"
        ],
        "properties": {
          "authed_token": {
            "type": "string"
          },
          "created_thread_count": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "last_created_thread_at": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "minimum": 0
          },
          "last_level_up_at": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "last_wrote_at": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "wrote_count": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "UpdateCapInput": {
        "type": "object",
        "properties": {
          "board_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateNgWordInput": {
        "type": "object",
        "properties": {
          "board_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "word": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateResInput": {
        "type": "object",
        "properties": {
          "author_name": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          },
          "is_abone": {
            "type": "boolean",
            "nullable": true
          },
          "mail": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "user_name",
          "enabled",
          "idp_bindings"
        ],
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "idp_bindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserIdpBinding"
            }
          },
          "user_name": {
            "type": "string"
          }
        }
      },
      "UserIdpBinding": {
        "type": "object",
        "required": [
          "id",
          "user_id",
          "idp_name",
          "idp_sub"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "idp_name": {
            "type": "string"
          },
          "idp_sub": {
            "type": "string"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      }
    }
  }
}